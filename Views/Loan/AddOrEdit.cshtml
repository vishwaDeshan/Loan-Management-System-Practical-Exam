@model LoanManagementSystemAssignment.ViewModels.LoanApplicationViewModel
@using LoanManagementSystemAssignment.Enums
@using Microsoft.AspNetCore.Mvc.Rendering

@{
    var isEdit = Model.Id > 0;
    ViewData["Title"] = isEdit ? "Edit Loan Application" : "Add Loan Application";
}

<div class="container mt-4 pb-2">
    <div class="card shadow-lg rounded-lg p-4 form-card">
        <h2 class="mb-4 text-center">@ViewData["Title"]</h2>

        <form asp-action="AddOrEdit" method="post" id="loanForm" novalidate>
            <input type="hidden" asp-for="Id" />

            <div asp-validation-summary="ModelOnly" class="text-danger mb-3"></div>

            <div class="form-group mb-3">
                <label asp-for="CustomerName" class="form-label">Customer Name <span class="text-danger"><b>*</b></span></label>
                <input asp-for="CustomerName" class="form-control" placeholder="Enter customer name" />
                <span asp-validation-for="CustomerName" class="text-danger"></span>
            </div>

            <div class="form-group mb-3">
                <label asp-for="NicPassport" class="form-label">NIC/Passport <span class="text-danger"><b>*</b></span></label>
                <input asp-for="NicPassport" class="form-control" placeholder="Enter NIC or Passport number" />
                <span asp-validation-for="NicPassport" class="text-danger"></span>
            </div>

            <div class="form-group mb-3">
                <div class="row">
                    <div class="col-md-6">
                        <label asp-for="LoanType" class="form-label">Loan Type <span class="text-danger"><b>*</b></span></label>
                        <select asp-for="LoanType" class="form-control" id="LoanType"
                                asp-items="@(new SelectList(Enum.GetNames(typeof(LoanType)), Model.LoanType.ToString()))">
                            <option value="">Select Loan Type</option>
                        </select>
                        <span asp-validation-for="LoanType" class="text-danger"></span>
                    </div>
                    <div class="col-md-6">
                        <label asp-for="InterestRate" class="form-label">Interest Rate (%)</label>
                        <input asp-for="InterestRate" class="form-control" id="InterestRate" readonly />
                        <span asp-validation-for="InterestRate" class="text-danger"></span>
                    </div>
                </div>
            </div>

            <div class="form-group mb-3">
                <div class="row">
                    <div class="col-md-6">
                        <label asp-for="LoanAmount" class="form-label">Loan Amount (LKR) <span class="text-danger"><b>*</b></span></label>
                        <input asp-for="LoanAmount" class="form-control" id="LoanAmount" placeholder="Enter loan amount" />
                        <span asp-validation-for="LoanAmount" class="text-danger"></span>
                    </div>
                    <div class="col-md-6">
                        <label class="form-label">Interest Amount (LKR)</label>
                        <input type="text" id="InterestAmount" class="form-control" readonly />
                    </div>
                </div>
            </div>

            <div class="form-group mb-3">
                <label asp-for="DurationMonths" class="form-label">Duration (Months) <span class="text-danger"><b>*</b></span></label>
                <input asp-for="DurationMonths" class="form-control" />
                <span asp-validation-for="DurationMonths" class="text-danger"></span>
            </div>

            <div class="form-group mb-3">
                <label asp-for="Status" class="form-label">Status <span class="text-danger"><b>*</b></span></label>
                <select asp-for="Status" class="form-control"
                        asp-items="@(new SelectList(Enum.GetNames(typeof(LoanStatus)), Model.Status.ToString()))">
                    <option value="">Select Status Type</option>
                </select>
                <span asp-validation-for="Status" class="text-danger"></span>
            </div>

            <div class="form-group mt-4 text-center">
                <div class="text-end mb-3">
                    <a asp-action="Index" class="btn btn-danger px-4 ms-2" id="cancelButton">Cancel</a>
                    <button type="submit" class="btn btn-primary px-4" id="submitLoanButton" disabled>
                        @(isEdit ? "Update" : "Submit")
                    </button>
                </div>
            </div>
        </form>
    </div>
</div>

<partial name="_ConfirmationModal" />

@section Scripts {
    <partial name="_ValidationScriptsPartial" />

    <script>
        $(document).ready(function () {
            const form = $("#loanForm");
            const submitButton = $("#submitLoanButton");
            const initialValues = {};

            // Store initial values
            form.find("input, select").each(function () {
                initialValues[this.name] = $(this).val();
            });

            function isFormDirty() {
                let dirty = false;
                form.find("input, select").each(function () {
                    if ($(this).val() != initialValues[this.name]) {
                        dirty = true;
                        return false;
                    }
                });
                return dirty;
            }

            function setInterestRate(type) {
                let rate = 0;
                switch (type) {
                    case 'Personal': rate = 5.0; break;
                    case 'Housing': rate = 3.0; break;
                    case 'Vehicle': rate = 7.0; break;
                }
                $("#InterestRate").val(rate);
                updateInterestAmount();
            }

            function updateInterestAmount() {
                const loanAmount = parseFloat($("#LoanAmount").val()) || 0;
                const interestRate = parseFloat($("#InterestRate").val()) || 0;
                const interestAmount = (loanAmount * interestRate) / 100;
                $("#InterestAmount").val(interestAmount.toFixed(2));
            }

            const loanTypeVal = $("#LoanType").val();
            if (loanTypeVal) setInterestRate(loanTypeVal);

            function toggleSubmit() {
                submitButton.prop("disabled", !isFormDirty());
            }

            form.find("input, select").on("blur input change", function () {
                $(this).valid();
                toggleSubmit();
                updateInterestAmount();
            });

            $("#CustomerName").on("input", function () {
                this.value = this.value.replace(/[^a-zA-Z\s]/g, '');
            });

            $("#NicPassport").on("input blur", function () {
                const val = $(this).val().toUpperCase().trim();
                let error = "";

                const oldNicPattern = /^[0-9]{9}[VX]$/;
                const newNicPattern = /^[0-9]{12}$/;
                const passportPattern = /^[A-Z0-9]{6,8}$/;

                if (!oldNicPattern.test(val) && !newNicPattern.test(val) && !passportPattern.test(val)) {
                    error = "Invalid NIC or Passport format";
                }

                $(this).next(".text-danger").text(error);
            });

            $("#LoanType").on("change", function () {
                setInterestRate(this.value);
            });

            $("#cancelButton").on("click", function (e) {
                e.preventDefault();
                if (isFormDirty()) {
                    $("#confirmationModal .modal-body").text("You have unsaved changes. Are you sure you want to cancel?");
                    window.pendingAction = () => window.location.href = '@Url.Action("Index")';
                    new bootstrap.Modal(document.getElementById('confirmationModal')).show();
                } else {
                    window.location.href = '@Url.Action("Index")';
                }
            });

            form.on("submit", function (e) {
                e.preventDefault();
                if (!form.valid()) return; // Only proceed if valid
                const customerName = $("#CustomerName").val();
                $("#confirmationModal .modal-body").text(
                    `Are you sure you want to ${@Json.Serialize(isEdit ? "update" : "submit")} the loan application for ${customerName}?`
                );
                window.pendingForm = this;
                new bootstrap.Modal(document.getElementById('confirmationModal')).show();
            });

            $("#confirmButton").on("click", function () {
                if (window.pendingForm) window.pendingForm.submit();
                else if (window.pendingAction) window.pendingAction();
                bootstrap.Modal.getInstance(document.getElementById('confirmationModal')).hide();
            });
        });
    </script>
}

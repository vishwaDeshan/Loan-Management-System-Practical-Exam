@using LoanManagementSystemAssignment.Enums
@model IEnumerable<LoanManagementSystemAssignment.Models.LoanApplication>

@{
    ViewData["Title"] = "Loan Applications Dashboard";
}

<div class="container">
    <h2>@ViewData["Title"]</h2>

    <div class="row">
        <div class="col-md-12">
            <div class="text-end mb-3">
                <a asp-action="AddOrEdit" class="btn btn-primary">
                    <span style="font-size: 1.5rem; font-weight: bold;">+</span> Add New Loan Application
                </a>
            </div>
            @if (Model.Any())
            {
                <table class="table table-bordered table-striped">
                    <thead>
                        <tr>
                            <th>Customer Name</th>
                            <th>NIC/Passport</th>
                            <th>Loan Type</th>
                            <th>Interest Rate (%)</th>
                            <th>Loan Amount</th>
                            <th>Duration (Months)</th>
                            <th>Status</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var loan in Model)
                        {
                            <tr>
                                <td>@loan.CustomerName</td>
                                <td>@loan.NicPassport</td>
                                <td>@loan.LoanType</td>
                                <td>@loan.InterestRate</td>
                                <td>@String.Format("Rs. {0:N2}", loan.LoanAmount)</td>
                                <td>@loan.DurationMonths</td>
                                <td>
                                    <form asp-action="EditStatus" method="post" class="status-form d-inline ms-2" data-loan-id="@loan.Id">
                                        <input type="hidden" name="id" value="@loan.Id" />
                                        <select name="status" class="form-select form-select-sm d-inline-block w-auto status-select">
                                            @foreach (var status in Enum.GetValues(typeof(LoanStatus)))
                                            {
                                                <option value="@status" selected="@(loan.Status == (LoanStatus)status)">
                                                    @status
                                                </option>
                                            }
                                        </select>
                                    </form>
                                </td>
                                <td class="d-flex gap-3">
                                    <a asp-action="Details" asp-route-id="@loan.Id" class="btn btn-success btn-sm" title="View">
                                        <i class="bi bi-eye"></i>
                                    </a>
                                    <a asp-action="AddorEdit" asp-route-id="@loan.Id" class="btn btn-success btn-sm" title="Edit">
                                        <i class="bi bi-pencil-square"></i>
                                    </a>

                                </td>

                            </tr>
                        }
                    </tbody>
                </table>
            }
            else
            {
                <p>No loan applications found.</p>
            }
        </div>
    </div>
</div>

<partial name="_ConfirmationModal" />

@section Scripts {
    <script>
        document.querySelectorAll('.status-select').forEach(select => {
            select.dataset.originalValue = select.value;

            select.addEventListener('change', function (e) {
                const original = this.dataset.originalValue;
                const newValue = this.value;

                this.value = original;

                window.pendingForm = this.closest('.status-form');
                window.pendingSelect = this;
                window.pendingNewValue = newValue;

                const loanId = window.pendingForm.dataset.loanId;
                const modalBody = document.querySelector('#confirmationModal .modal-body');
                modalBody.textContent = `Are you sure you want to change the status of loan ID ${loanId} to ${newValue}?`;

                const modal = new bootstrap.Modal(document.getElementById('confirmationModal'));
                modal.show();
            });
        });

        // Confirm button
        document.getElementById('confirmButton').addEventListener('click', function () {
            if (window.pendingSelect && window.pendingNewValue) {
                window.pendingSelect.value = window.pendingNewValue;
            }
            if (window.pendingForm) {
                window.pendingForm.submit();
            }
            const modal = bootstrap.Modal.getInstance(document.getElementById('confirmationModal'));
            modal.hide();
        });

        // cancel buttin
        document.getElementById('cancelButton').addEventListener('click', function () {
            if (window.pendingSelect) {
                window.pendingSelect.value = window.pendingSelect.dataset.originalValue;

                window.pendingSelect.dispatchEvent(new Event('input', { bubbles: true }));
            }

            const modal = bootstrap.Modal.getInstance(document.getElementById('confirmationModal'));
            modal.hide();
        });
</script>
}
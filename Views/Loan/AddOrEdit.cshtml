@model LoanManagementSystemAssignment.ViewModels.LoanApplicationViewModel
@using LoanManagementSystemAssignment.Enums
@using Microsoft.AspNetCore.Mvc.Rendering

@{
    var isEdit = Model.Id > 0;
    ViewData["Title"] = isEdit ? "Edit Loan Application" : "Add Loan Application";
}

<div class="container mt-4 pb-2">
    <div class="card shadow-lg rounded-lg p-4 form-card">
        <h2 class="mb-4 text-center">@ViewData["Title"]</h2>

        <form asp-action="AddOrEdit" method="post" id="loanForm">
            <input type="hidden" asp-for="Id" />

            <div asp-validation-summary="ModelOnly" class="text-danger mb-3"></div>

            <div class="form-group mb-3">
                <label asp-for="CustomerName" class="form-label">Customer Name</label>
                <input asp-for="CustomerName" class="form-control" />
                <span asp-validation-for="CustomerName" class="text-danger"></span>
            </div>

            <div class="form-group mb-3">
                <label asp-for="NicPassport" class="form-label">NIC/Passport</label>
                <input asp-for="NicPassport" class="form-control" />
                <span asp-validation-for="NicPassport" class="text-danger"></span>
            </div>

            <div class="form-group mb-3">
                <div class="row">
                    <div class="col-md-6">
                        <label asp-for="LoanType" class="form-label">Loan Type</label>
                        <select asp-for="LoanType" class="form-control" id="LoanType"
                                asp-items="@(new SelectList(Enum.GetNames(typeof(LoanType)), Model.LoanType.ToString()))">
                            <option value="">Select Loan Type</option>
                        </select>
                        <span asp-validation-for="LoanType" class="text-danger"></span>
                    </div>
                    <div class="col-md-6">
                        <label asp-for="InterestRate" class="form-label">Interest Rate (%)</label>
                        <input asp-for="InterestRate" class="form-control" id="InterestRate" readonly />
                        <span asp-validation-for="InterestRate" class="text-danger"></span>
                    </div>
                </div>
            </div>

            <div class="form-group mb-3">
                <label asp-for="LoanAmount" class="form-label">Loan Amount (LKR)</label>
                <input asp-for="LoanAmount" class="form-control" />
                <span asp-validation-for="LoanAmount" class="text-danger"></span>
            </div>

            <div class="form-group mb-3">
                <label asp-for="DurationMonths" class="form-label">Duration (Months)</label>
                <input asp-for="DurationMonths" class="form-control" />
                <span asp-validation-for="DurationMonths" class="text-danger"></span>
            </div>

            <div class="form-group mb-3">
                <label asp-for="Status" class="form-label">Status</label>
                <select asp-for="Status" class="form-control"
                        asp-items="@(new SelectList(Enum.GetNames(typeof(LoanStatus)), Model.Status.ToString()))">
                    <option value="">Select Status Type</option>
                </select>
                <span asp-validation-for="Status" class="text-danger"></span>
            </div>

            <div class="form-group mt-4 text-center">
                <div class="text-end mb-3">
                    <a asp-action="Index" class="btn btn-danger px-4 ms-2" id="cancelButton">Cancel</a>
                    <button type="submit" class="btn btn-primary px-4" id="submitLoanButton" disabled>
                        @(isEdit ? "Update" : "Submit")
                    </button>
                </div>
            </div>
        </form>
    </div>
</div>

<partial name="_ConfirmationModal" />

@section Scripts {
    <partial name="_ValidationScriptsPartial" />

    <script>
        const form = document.getElementById('loanForm');
        const submitButton = document.getElementById('submitLoanButton');
        const initialValues = {};
        const isEdit = @Json.Serialize(Model.Id > 0);

        function storeInitialValues() {
            Array.from(form.elements).forEach(el => {
                if (el.name) initialValues[el.name] = el.value;
            });
        }

        function isFormDirty() {
            return Array.from(form.elements).some(el => el.name && el.value !== initialValues[el.name]);
        }

        function setInterestRate(type) {
            let rate = 0;
            switch (type) {
                case 'Personal': rate = 5.0; break;
                case 'Housing': rate = 3.0; break;
                case 'Vehicle': rate = 7.0; break;
            }
            document.getElementById('InterestRate').value = rate;
        }

        window.addEventListener('load', () => {
            storeInitialValues();
            const loanType = document.getElementById('LoanType').value;
            if (loanType) setInterestRate(loanType);
            submitButton.disabled = !isFormDirty();
        });

        document.getElementById('LoanType').addEventListener('change', function () {
            setInterestRate(this.value);
            submitButton.disabled = !isFormDirty();
        });

        form.querySelectorAll('input, select').forEach(el => {
            el.addEventListener('input', () => {
                submitButton.disabled = !isFormDirty();
            });
        });

        document.getElementById('cancelButton').addEventListener('click', function (event) {
            event.preventDefault();
            if (isFormDirty()) {
                document.querySelector('#confirmationModal .modal-body').textContent =
                    'You have unsaved changes. Are you sure you want to cancel?';
                window.pendingAction = () => window.location.href = '@Url.Action("Index")';
                new bootstrap.Modal(document.getElementById('confirmationModal')).show();
            } else {
                window.location.href = '@Url.Action("Index")';
            }
        });

        form.addEventListener('submit', function (event) {
            event.preventDefault();
            if ($(this).valid()) {
                const customerName = document.getElementById('CustomerName').value;
                document.querySelector('#confirmationModal .modal-body').textContent =
                    `Are you sure you want to ${isEdit ? "update" : "submit"} the loan application for ${customerName}?`;
                window.pendingForm = this;
                new bootstrap.Modal(document.getElementById('confirmationModal')).show();
            }
        });

        document.getElementById('confirmButton').addEventListener('click', function () {
            if (window.pendingForm) window.pendingForm.submit();
            else if (window.pendingAction) window.pendingAction();
            bootstrap.Modal.getInstance(document.getElementById('confirmationModal')).hide();
        });
    </script>
}
